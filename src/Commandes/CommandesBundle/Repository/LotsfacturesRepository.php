<?php

namespace Commandes\CommandesBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * VentesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */

class LotsfacturesRepository extends EntityRepository
{
    public function findByJours($dj,$fj,$user)
    {
        $qb = $this->createQueryBuilder('u')
            ->Select('u')
            ->Where('u.datevente >= :debut')
            ->andWhere('u.datevente <= :fin')
            ->andWhere('u.user = :user')
            ->setParameter('debut', $dj)
            ->setParameter('fin', $fj)
            ->setParameter('user', $user)

        ;
        return $qb->getQuery()->getResult();
    }
    public function findBySemaines($ds,$fs,$user)
    {
        $qb = $this->createQueryBuilder('u')
            ->Select('u')
            ->Where('u.datevente >= :debut')
            ->andWhere('u.datevente <= :fin')
            ->andWhere('u.user = :user')
            ->setParameter('debut', $ds)
            ->setParameter('fin', $fs)
            ->setParameter('user', $user)
        ;
        return $qb->getQuery()->getResult();
    }
    public function findByMois($dm,$fm,$user)
    {
        $qb = $this->createQueryBuilder('u')
            ->Select('u')
            ->Where('u.datevente >= :debut')
            ->andWhere('u.datevente <= :fin')
            ->andWhere('u.user = :user')
            ->setParameter('debut', $dm)
            ->setParameter('fin', $fm)
            ->setParameter('user', $user)
        ;
        return $qb->getQuery()->getResult();
    }
    public function findByAnnees($da,$fa,$user)
    {
        $qb = $this->createQueryBuilder('u')
            ->Select('u')
            ->Where('u.datevente >= :debut')
            ->andWhere('u.datevente <= :fin')
            ->andWhere('u.user = :user')
            ->setParameter('debut', $da)
            ->setParameter('fin', $fa)
            ->setParameter('user', $user)
        ;
        return $qb->getQuery()->getResult();
    }

    public function graphes($etat,$type,$du,$au,$zone)
    {
        $qb = $this->createQueryBuilder('u')

            ->select('SUM(u.totalTTC) as somme')



        ;

        return $qb->getQuery()->getArrayResult();
    }


    public function findByFactures($formid)
    {
        $qb = $this->createQueryBuilder('u')
            ->Select('u')
            ->innerJoin('u.factures', 'a')

            ->andWhere('a.id = :facture')

            ->setParameter('facture', $formid)

        ;
        return $qb->getQuery()->getResult();
    }
}
